<?php

namespace App\Services;

use App\Job;

class JobService
{

    /**
     * Build and return the code for Jobs work preferences hours settings
     * returns a five digit string like 10100
     *
     * @param [int] $jobId
     * @return string
     */
    public static function getJobWorkPrefHourSettings($jobId)
    {

        $job = Job::getJobById($jobId);

        if (!$job) {
            return false;
        }

        // build above setup from current database values
        $hu1 = $job['normal_hours'];
        $hu2 = $job['nightshift'];
        $hu3 = $job['nightshift_only'];
        $hu4 = $job['other_shift'];
        $hu5 = $job['other_shift_only'];

        return $hu1 . $hu2 . $hu3 . $hu4 . $hu5;
    }
   
   
    /**
     * Build and return the code for jobs work preferences days settings
     * returns a five digit string like 10100
     *
     * @param [int] $jobId
     * @return string
     */
    public static function getjobWorkPrefDaySettings($jobId)
    {
        $job = Job::getJobById($jobId);

        if (!$job) {
            return false;
        }

        // build above setup from current database values
        $du1 = $job['workdays'];
        $du2 = $job['saturday'];
        $du3 = $job['sunday'];
        $du4 = $job['bank_holidays'];
        $du5 = $job['sat_sun_bh_only'];

        return $du1 . $du2 . $du3 . $du4 . $du5;
    }
    public static function getJobWorkPrefHourCode($workPrefHourCase)
    {
        //get code from the associative table
        return WorkPreferenceService::workPrefSelectionCasesHours($workPrefHourCase);
    }
    public static function getJobWorkPrefDayCode($workPrefDayCase)
    {
        //get code from the associative table
        return WorkPreferenceService::workPrefSelectionCasesDays($workPrefDayCase);
    }
}

