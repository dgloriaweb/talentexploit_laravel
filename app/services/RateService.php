<?php

namespace App\Services;

use App\Job;
use App\JobDriversLicense;
use App\Person;
use App\Property;

class RateService{
     /**
     * return string
     */
    public static function get_drivers_rate($person_id, $job_id)
    {
        //drivers license
        $person_drivers_licenses = Property::getDriversLicense($person_id);
        $array1 = [];
        foreach ($person_drivers_licenses as $person_drivers_license) {
            array_push($array1, $person_drivers_license->drivers_license['drivers_license']);
        }

        //get the job's drivers license array
        $job_drivers_licenses = JobDriversLicense::getJobDriversLicenses($job_id);

        $array2 = [];
        foreach ($job_drivers_licenses as $job_drivers_license) {
            array_push($array2, $job_drivers_license->driver['drivers_license']);
        }
        //if job license is none, then return empty array and return 100% match
        if ($array2[0] == 'none') {
            return  "100%";
        } else {
            //if there is other than none, compare arrays
            //check intersection of the two arrays
            $a = count($array2);
            $b = count(array_intersect($array2, $array1));
            $result = ($b / $a);
            //compare length of intersection array with job array length, return match in percentage
            return  intval($result * 100) . '%';
        }
    }
    public static function get_worprefs_rate($person_id, $job_id)
    {
        //get data from persons, build an array
        $workprefs_array = Person::getFlatWorkprefsById($person_id);
        
        //get data from jobs, build an array
        $jobWorkprefs_array = Job::getFlatJobWorkprefsById($job_id);
        //compare two arrays
        // echo '<pre>'; var_dump($workprefs_array); echo '</pre>'; 
        // echo '<pre>'; var_dump($jobWorkprefs_array); echo '</pre>'; 
        // echo '<pre>'; var_dump(array_intersect_assoc($jobWorkprefs_array, $workprefs_array)); echo '</pre>'; die;
        $a = count($jobWorkprefs_array);
        $b = count(array_intersect_assoc($jobWorkprefs_array, $workprefs_array));
        $result = ($b / $a);
        return intval($result * 100) . '%';
    }
}