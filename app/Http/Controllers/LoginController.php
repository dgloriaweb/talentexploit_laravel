<?php

namespace App\Http\Controllers;

use App\Person;
use Illuminate\Http\Request;

class LoginController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {

        $data = [
            'title' => 'login'
        ];
        return view('login', $data);
    }


    /**
     * Show the form for creating a new resource.
     *
     * @param  \Illuminate\Http\Request $request
     * @return \Illuminate\Http\Response $response
     * @param App\Person $person
     */
    public function login(Request $request)
    {

        //setup validation
        $validatedData =  $request->validate([
            'username' => ['required', 'max:255'],
            // 'password' => ['required', 'min:8'],
            'password' => ['required'],
        ]);
        $username = $request->input('username');
        $password = $request->input('password');
        // $password = bcrypt($request->input['password']);
        //get user from database
        $matchingUser = Person::where('username', $username)->first();

        //if user is ok, then store in a session    
        if ($matchingUser) {

            $request->session()->put('username', $username);
        } else {
            echo '<pre>';
            var_dump('user doesn\'t exist');
            echo '</pre>';
            $data = [
                'title' => 'login'
            ];
            return view('login', $data);
        }

        //return user to home page
        return redirect('home');
    }


    /**  
     * @param  \Illuminate\Http\Request $request
     * 
     */
    public function logout(Request $request)
    {
        $request->session()->forget('username');
        //return user to home page
        return redirect('home');
    }


    /**  
     * @param  \Illuminate\Http\Request $request
     * 
     */
    public function register()
    {
        $data = [
            'title' => 'register'
        ];
        //return user to home page
        return view('register', $data);
    }

    /**  
     * @param  \Illuminate\Http\Request $request
     * 
     */
    public function storeUser(Request $request)
    {
        $data = [
            'title' => 'register'
        ];
        //setup validation
        $validatedData =  $request->validate([
            'username' => ['required', 'max:255'],
            // 'password' => ['required', 'min:8'],
            'password' => ['required', 'confirmed'],
            'password_confirmation' => ['required'],
        ]);
        $username = $request->input('username');
        $password = $request->input('password');
        // $password = bcrypt($request->input['password']);
        // get user from database to check if this name is already in use
        $matchingUser = Person::where('username', $username)->first();
        if ($matchingUser) {
            return back()->with('error', 'Username already taken, please choose another username!');
            
        } else {
            //store user
            if(Person::create(['username'=> $username])) {
                //created successfully
                //return user to home page
                return redirect('home');
            } else {
                echo '<pre>';
                var_dump('could not insert new Person');
                echo '</pre>';
                die;
            }
        }
    }
}
